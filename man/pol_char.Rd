% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PolicyChars.R
\name{pol_char}
\alias{pol_char}
\title{Policy Characteristics}
\usage{
pol_char(char_levels, frequencies)
}
\arguments{
\item{char_levels}{A named list of vectors. The vector names are characteristic names and the vectors contain all possible levels of each characteristic}

\item{frequencies}{A names list of numeric vectors. The names must match those in char_levels. The vectors must be positive numbers which indicate relative freqeuncy of each level within each characteristic. If the values in a vector do not sum to 1.0 then they will be off-balanced in the output.}
}
\value{
\code{pol_char()} checks that the inputs conform to requirements and returns a pol_char object which is a list containing char_list and freq_list
}
\description{
A structure for storing policy characteristics and how frequently they occur.
}
\details{
\code{pol_char()} does not do any calculations. It checks that the list which is input has a valid
structure to be a pol_char object. The benefit is that functions which use pol_char objects do not have to run
tests to check validity of the structure. The only have to do \code{is.pol_char(obj)}
}
\examples{
test_char <- pol_char(
  list(state = c('AL','AR','AZ')
       , line = c('auto', 'home')
       , uw_score = LETTERS[1:5])
  ,list(state = c(.5, .2, .3)
        , line = c(.6, .4)
        , uw_score = c(.15, .25, .4, .2, .1))
)

test_char <- pol_char(
  list(state = c('AL','AR','AZ')
       , line = c('auto', 'home')
       , uw_score = LETTERS[1:5])
  ,list(state = c(5, 2, 3)
        , line = c(6, 4)
        , uw_score = c(15, 25, 40, 20, 10))
)
}
